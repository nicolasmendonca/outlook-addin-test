{"version":3,"file":"commands.js","mappings":"gBACIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAGhB,CAFE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCGxB,IAAIC,EAAsB,CAAC,G,gBCI3B,IAAIC,EAEJC,OAAOC,SAAQ,WACbF,EAAOC,OAAOE,QAAQC,QAAQJ,IAG/B,IA0DD,IAAMP,EATmB,oBAATY,KACVA,KACkB,oBAAXP,OACPA,YACkB,IAAXQ,EAAAA,EACPA,EAAAA,OACAC,EAMNd,EAAEe,OAvDF,SAAgBC,GACd,IAAMC,EAAU,CACdC,KAAMV,OAAOW,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAIdhB,EAAKiB,qBAAqBC,aAAa,SAAUR,GAGjDD,EAAMU,WACP,EA2CD1B,EAAE2B,eAzCF,SAAwBX,GAGtBT,EAAKiB,qBAAqBC,aAAa,SAAU,CAC/CP,KAAMV,OAAOW,aAAaC,4BAA4BC,qBACtDJ,QAAS,gCACTK,KAAM,aACNC,YAAY,IAGdhB,EAAKqB,QAAQC,SAAb,oBACAtB,EAAKuB,SAASD,SAAd,yBACAtB,EAAKwB,KAAKF,SAAV,0BAA8C,CAC5CG,aAAcxB,OAAOyB,aAAaC,OAGpC3B,EAAKiB,qBAAqBC,aAAa,SAAU,CAC/CP,KAAMV,OAAOW,aAAaC,4BAA4BC,qBACtDJ,QAAS,+BACTK,KAAM,aACNC,YAAY,IAIdP,EAAMU,WACP,E,mbDvDDS,CAA2B,EAAG7B,EAAqBP,E","sources":["webpack://indeed-add-in/webpack/bootstrap","webpack://indeed-add-in/webpack/runtime/global","webpack://indeed-add-in/webpack/startup","webpack://indeed-add-in/./src/commands/commands.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[50388](0, __webpack_exports__, __webpack_require__);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, self, window */\n\nlet item;\n\nOffice.onReady(() => {\n  item = Office.context.mailbox.item;\n\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction action(event) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction quickInterview(event) {\n  // Show a notification message\n\n  item.notificationMessages.replaceAsync(\"action\", {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Adding quick Indeed interview\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  });\n\n  item.subject.setAsync(`Indeed Interview`);\n  item.location.setAsync(`Indeed interview link`);\n  item.body.setAsync(`<b>Indeed Interview</b>`, {\n    coercionType: Office.CoercionType.Html,\n  });\n\n  item.notificationMessages.replaceAsync(\"action\", {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Quick Indeed Interview added\",\n    icon: \"Icon.80x80\",\n    persistent: false,\n  });\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal();\n\n// The add-in command functions need to be available in global scope\ng.action = action;\ng.quickInterview = quickInterview;\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","__webpack_exports__","item","Office","onReady","context","mailbox","self","global","undefined","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","notificationMessages","replaceAsync","completed","quickInterview","subject","setAsync","location","body","coercionType","CoercionType","Html","__webpack_modules__"],"sourceRoot":""}